from bbbqd.body.body_utils import compute_body_encoding_function, compute_body_mask
from jax import random
import jax.numpy as jnp

config = {
    "body_encoding": "indirect",
    "grid_size": 10
}

sample_body = jnp.asarray([-0.27055913, -0.17073202, 0.6564049, 0.6905946, 0.6274382, 0.80668664,
                           0.38425538, 0.7170634, 0.0688253, 0.51548207, 1.203825, -0.08192953,
                           0.26280445, 0.00840365, -0.05150217, 0.08460365, 0.22767602, 0.58140886,
                           0.5432221, 0.7160557, -0.14192685, 0.4668634, 0.25678533, 0.64320654,
                           0.47582364, 0.5943076, -0.0983123, 0.6387833, 0.24288869, 0.07756423,
                           0.20081782, 0.8711832, 0.05619694, -0.1501212, 0.16600598, 0.8918115,
                           -0.14269419, 0.72115874, 1.0801775, 0.47312766, 0.14080961, 0.69310534,
                           0.41244513, -0.5340856, 0.09767451, 0.09884024, 0.43344784, 0.05462937,
                           0.5434611, 0.6041439, 0.47819966, 0.08214626, 0.8825537, 0.74066097,
                           0.3570076, 0.36049515, 0.01164738, 0.7095128, 0.5492462, 0.2994968,
                           -0.09549595, 1.0635798, 0.29549676, 0.3796583, 0.33008072, 0.15184006,
                           0.59514886, 0.75275767, 0.98736465, 0.7035938, -0.13466336, 0.15209858,
                           0.87912273, 0.36823332, 0.43105763, 0.9879785, 0.42716393, 0.75335616,
                           -0.3931748, 0.92953193, -0.21399955, 0.6065694, 0.272922, 0.7621908,
                           0.21170932, 0.7576421, 0.8287892, 1.1075319, 0.57817197, 1.0454118,
                           0.82333225, 0.29852384, 0.8650793, 0.31041422, 1.0673488, 0.61765313,
                           0.58331686, 0.04158064, 1.2015696, 0.12052506, 3., 0.,
                           2., 2., 3., 3., 3., 1.,
                           0., 3., 1., 3., 3., 0.,
                           3., 0., 2., 3., 2., 2.,
                           1., 3., 2., 1., 0., 2.,
                           2., 2., 3., 3., 0., 0.,
                           3., 3., 0., 0., 0., 0.,
                           2., 3., 2., 2., 1., 2.,
                           1., 1., 1., 3., 2., 3.,
                           0., 1., 3., 3., 2., 0.,
                           3., 1., 0., 3., 0., 3.,
                           0., 2., 3., 0., 3., 3.,
                           3., 3., 1., 3., 3., 1.,
                           0., 2., 3., 2., 3., 1.,
                           3., 3., 3., 3., 2., 2.,
                           2., 1., 1., 3., 0., 0.,
                           0., 3., 1., 1., 1., 2.,
                           0., 1.]
                          )

body_encoding_fn = compute_body_encoding_function(config)

# rnd_key = random.PRNGKey(0)
# random_float_body = random.uniform(key=rnd_key, shape=(config["grid_size"] ** 2,))
# body_mask = compute_body_mask(config)
# random_int_body = jnp.floor(random.uniform(key=rnd_key, shape=(config["grid_size"] ** 2,)) * body_mask).astype(int)
# random_body = jnp.concatenate((random_float_body, random_int_body))
encoded_body = body_encoding_fn(sample_body)
print(encoded_body)
print("done")
